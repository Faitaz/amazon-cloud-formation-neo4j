#!/bin/bash
#
# This script creates a sample resource group and deploys all resources into it from the ARM
# templates.  Most of it can be controlled from the outside by setting env vars.
########################################################################################

if [ -z "${CLUSTERNAME_PREFIX}" ]; then
    #CLUSTERNAME_PREFIX="neo$(cat /dev/urandom | env LC_CTYPE=C tr -cd 'a-z0-9A-Z' | head -c 8)"
    CLUSTERNAME_PREFIX="neo4j-test"
fi
if [ -z "${INSTANCE_COUNT}" ]; then
    INSTANCE_COUNT=3
fi
if [ -z "${NEO4J_PASSWORD}" ]; then
    read -p "Neo4j Password: " -s NEO4J_PASSWORD
    echo
fi
if [ -z "${HEAP_SIZE}" ]; then
    HEAP_SIZE="1G"
fi

if [ -z "${PUBKEY}" ]; then
    PUBKEY=$(cat ~/.ssh/id_rsa.pub)
fi

if [ -z "${USERNAME}" ]; then
    USERNAME=$(whoami)
fi

EXTENSION=""
# if [ -n "$1" -a -f "$1" ]; then
#     if [[ "$1" != *"/"* ]]; then
#         if git -C "$(dirname $0)" ls-files "$1" --error-unmatch >/dev/null; then
#             EXTENSION=$(cat<<EXTENSION_JSON
# ,
#     "extensionScript": {
#         "value": "$1"
#     }
# EXTENSION_JSON
# )
#         fi
#     fi
# fi

if [ -z "${RESOURCE_GROUP}" ] ; then
   export RESOURCE_GROUP=RG-testdeploy-$(head -c 3 /dev/urandom | base64)
fi

if [ -z "${DEPLOYMENT}" ]; then
    # DEPLOYMENT="neo4j-$(TZ=0 date +'Neo4j-HA-%Y%m%dT%H%M%SZ')"
    DEPLOYMENT=neo4j-testdeploy
fi

if [ -z "${LOCATION}" ]; then
    LOCATION="East US"
fi

# Resource groups should be created for all things which share
# a lifecycle.  Deployments also can't delete all of their underlying
# resources, so we will destroy all deployment resources by actually
# deleting the entire group.
echo "Checking $RESOURCE_GROUP"
if ! az group show --name "${RESOURCE_GROUP}" &> /dev/null; then
    if ! az group create --name "${RESOURCE_GROUP}" --location "${LOCATION}"; then
        echo "Failed to create necessary resource group ${RESOURCE_GROUP}"
        exit $?
    fi
fi

echo $(cat <<JSON
{
    "ClusterNamePrefix": {
        "value": "${CLUSTERNAME_PREFIX}"
    },
    "VmCount": {
        "value": ${INSTANCE_COUNT}
    },
    "VmSize": {
        "value": "Standard_A1"
    },
    "AdminUserName": {
        "value": "${USERNAME}"
    },
    "AdminAuthType": {
        "value": "sshpublickey"
    },
    "AdminCredential": {
        "value": "${PUBKEY}"
    },
    "VNetResourceGroupName": {
        "value": "${RESOURCE_GROUP}"
    },
    "VNetNewOrExisting": {
        "value": "new"
    },
    "VNetName": {
        "value": "neoVnet"
    },
    "VNetAddressPrefix": {
        "value": "10.0.0.0/16"
    },
    "SubnetName": {
        "value": "NeoVnetSubnet1"
    },
    "SubnetAddressPrefix": {
        "value": "10.0.1.0/24"
    },
    "SubnetStartAddress": {
        "value": "10.0.1.0"
    },
    "PublicIPNewOrExistingOrNone": {
        "value": "none"
    },
    "PublicIPName": {
        "value": "NeoA001"
    },
    "PublicIPAllocationMethod": {
        "value": "Dynamic"
    },
    "PublicIPIdleTimeoutInMinutes": {
        "value": 10
    },
    "Neo4jPassword": {
        "value": "${NEO4J_PASSWORD}"
    },
    "ArtifactsBase": {
        "value": "https://s3.amazonaws.com/neo4j-arm/test"
    }$EXTENSION
}
JSON
) > .parameters.json

echo "Parameters have been prepared."
echo "Deploying templates to S3..."

# Results in HTTP location:
# https://s3.amazonaws.com/neo4j-arm/test/
s3cmd put -P arm/* s3://neo4j-arm/test/

echo "When ready to deploy, run this command:"

echo az group deployment create \
    --template-file arm/mainTemplate.json \
    --parameters @./.parameters.json \
    --resource-group "${RESOURCE_GROUP}" \
    --name "${DEPLOYMENT}"

