{#
 # This sub-template creates a collection of VMs.
 # 
 # Requires jinja variables:  
 #     dbms_mode = (CORE|READ_REPLICA)
 #     count_parameter e.g. "CoreNodes" - the name of the ARM parameter containing the number of
 #     VMs to generate.
 #}
{
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(variables('namePrefixes').vm, padLeft(copyIndex(),3,'0'))]",
    "apiVersion": "2018-04-01",
    "location": "[parameters('Location')]",
    "tags": {
        "provider": "B9442746-5BFF-4E2F-BC90-1F49C5791FAA",
        "neo4jURL": "https://neo4j.com/",
        "licensing": "https://neo4j.com/lp/enterprise-cloud/?utm_content=azure-marketplace",
        "dbms_mode": "{{ dbms_mode }}",
        "neo4j_mode": "cluster",
        "dbms_connector_https_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jHttpsPort')))]",
        "dbms_connector_http_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jHttpPort')))]",
        "dbms_connector_bolt_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jBoltPort')))]",
        "causal_clustering_minimum_core_cluster_size_at_formation": "3",
        "causal_clustering_initial_discovery_members": "node000:5000,node001:5000,node002:5000",
        "causal_clustering_discovery_type": "LIST",
        "dbms_connector_bolt_tls_level": "OPTIONAL"
    },
    "properties": {
        "availabilitySet": {
            "id": "[variables('resourceIDs').availabilitySet]"
        },
        "hardwareProfile": {
            "vmSize": "[parameters('VmSize')]"
        },
        "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": {
                "name": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'),'-OS')]",
                "createOption": "fromImage",
                "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                }
            },
            "dataDisks": [
                {
                    "lun": 0,
                    "name": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'),'-Data-0')]",
                    "createOption": "Empty",
                    "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                    },
                    "caching": "None",
                    "diskSizeGB": "1023"
                }
            ]
        },
        "osProfile": {
            "computerName": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'))]",
            "adminUsername": "[parameters('AdminUserName')]",
            "linuxConfiguration": "[variables('authConfig').linuxConfiguration]",
            "secrets": [],
            "adminPassword": "[variables('authConfig').adminPassword]"
        },
        "networkProfile": {
            "networkInterfaces": [
                {
                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefixes').nic,padLeft(copyIndex(),3,'0')))]"
                }
            ]
        }
    },
    "copy": {
        "name": "vm{{ dbms_mode }}CI",
        "count": "[parameters('{{ count_parameter }}')]"
    },
    "dependsOn": [
        "[variables('resourceIDs').availabilitySet]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefixes').nic,padLeft(copyIndex(),3,'0')))]"
    ]
}
