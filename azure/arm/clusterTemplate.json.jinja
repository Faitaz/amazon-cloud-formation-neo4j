{# Set main Neo4j Azure image used in these templates here. #}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },

        "ClusterName": {
            "type": "string",
            "minLength": 1,
            "maxLength": 11
        },

        "CoreNodes": {
            "type": "int",
            "minValue": 3,
            "maxValue": 9,
            "defaultValue": 3
        },

        "ReadReplicas": {
            "type": "int",
            "minValue": 0,
            "defaultValue": 0,
            "maxValue": 9
        },

        "VmSize": {
            "type": "string"
        },

        "DataDiskType": {
            "type": "string"
        },

        "DataDiskSizeGB": {
            "type": "int",
            "minValue": 5,
            "defaultValue": 1024
        },

        "AdminUserName": {
            "type": "securestring"
        },

        "AdminAuthType": {
            "type": "string",
            "allowedValues": ["sshpublickey", "password"]
        },

        "AdminCredential": {
            "type": "securestring",
            "defaultValue": null
        },

        "PublicIPAllocationMethod": {
            "type": "string",
            "allowedValues": ["Static", "Dynamic"]
        },

        "Neo4jPassword": {
            "type": "securestring"
        },

        "Neo4jHttpsPort": {
            "type": "int"
        },

        "Neo4jHttpPort": {
            "type": "int"
        },

        "Neo4jBoltPort": {
            "type": "int"
        },
        
        "Neo4jClusterPort": {
            "type": "int",
            "defaultValue": 5000,
            "metadata": {
                "description": "The port used for communication between instances in the cluster"
            }
        },

        "Neo4jTransactionPort": {
            "type": "int",
            "defaultValue": 6000,
            "metadata": {
                "description": "The port used to read transaction data from the master"
            }
        },

        "Neo4jRaftPort": {
            "type": "int",
            "defaultValue": 7000,
            "metadata": {
                "description": "The port used to read transaction data from the master"
            }
        },

        "Neo4JTags": {
            "type": "object",
            "metadata": {
                "description": "Dictionary of tags to apply to the various resources"
            }
        },

        "ArtifactsBase": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "base URL at which Marketplace package files are stored. Value adjusted automatically during Marketplace submission process."
            },
            "defaultValue": "https://s3.amazonaws.com/neo4j-arm/test"
        }
    },
    "variables": {
        "artifactsBase": "[concat(parameters('ArtifactsBase'),'/')]",
        "namePrefixes": {
            "nic": "[concat(parameters('ClusterName'),'-nic')]",
            "nsg": "[concat(parameters('ClusterName'),'-sg')]",
            "storage": "[concat(toLower(trim(parameters('ClusterName'))), uniqueString(resourceGroup().id))]",
            "vm": "[concat(parameters('ClusterName'),'-vm')]",
            "publicIP": "[concat(parameters('ClusterName'),'-public-ip')]",
            "availabilitySet": "[concat(parameters('ClusterName'), '-as')]"
        },
        "VNetName": "[concat(parameters('ClusterName'),'-vnet')]",
        "resourceIDs": {
            "availabilitySet": "[resourceId('Microsoft.Compute/availabilitySets', variables('namePrefixes').availabilitySet)]",
            "publicIP": "[resourceId('Microsoft.Network/publicIPAddresses', variables('namePrefixes').publicIP)]",
            "virtualNetwork": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('VNetName'))]"
        },
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('AdminUserName'),'/.ssh/authorized_keys')]",
                        "keyData": "[parameters('AdminCredential')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {#
         # Network security group defines firewall rules for all nodes.
         # This security group is inherited by all cores and read replicas.
         #}
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('namePrefixes').nsg]",
            "apiVersion": "2018-07-01",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Neo4JTags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowSSH",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHTTP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jHttpPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowHTTPS",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jHttpsPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowBolt",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jBoltPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Neo4jClusterCommunication",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jClusterPort'))]",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Neo4jTransactions",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jTransactionPort'))]",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1050,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Neo4jRaft",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jRaftPort'))]",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1060,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Neo4jBackup",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6362",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1070,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {#
         # The Virtual Network (with subnets and in locations) defines the networking environment
         # for all nodes in the cluster.
         #}
        {
            "type": "Microsoft.Resources/deployments",
            "name": "VirtualNetwork",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'vnet-new.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "NetworkName": {
                        "value": "[variables('VNetName')]"
                    },
                    "Location": {
                        "value": "[parameters('Location')]"
                    },
                    "Neo4JTags": {
                        "value": "[parameters('Neo4JTags')]"
                    }
                }
            }
        },
        {#
         # The following included sub-template creates all IP addresses and virtual machines for the
         # given cluster topology role.
         #}
         {
            "condition": "[greater(parameters('CoreNodes'), 0)]",
            "type": "Microsoft.Resources/deployments",
            "name": "Neo4jCoreNodeSet",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'neo4jNodeSet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "NodePrefix": { "value": "core" },
                    "DBMS_MODE": { "value": "CORE" },
                    "SubnetId": { "value": "[concat(variables('resourceIDs').virtualNetwork, '/subnets/NeoVnetSubnet1')]" },
                    "NetworkSecurityGroupId": { "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('namePrefixes').nsg)]" },

                    "N": { "value": "[parameters('CoreNodes')]" },
                    "Location": { "value": "[parameters('Location')]" },
                    
                    "DataDiskType": { "value": "[parameters('DataDiskType')]" },
                    "DataDiskSizeGB": { "value": "[parameters('DataDiskSizeGB')]" },

                    "AdminUserName": { "value": "[parameters('AdminUserName')]" },
                    "AdminAuthType": { "value": "[parameters('AdminAuthType')]" },
                    "AdminCredential": { "value": "[parameters('AdminCredential')]" },
                    "PublicIPAllocationMethod": { "value": "[parameters('PublicIPAllocationMethod')]" },
                    "Neo4jPassword": { "value": "[parameters('Neo4jPassword')]" },
                    "Neo4jHttpsPort": { "value": "[parameters('Neo4jHttpsPort')]" },
                    "Neo4jHttpPort": { "value": "[parameters('Neo4jHttpPort')]" },
                    "Neo4jBoltPort": { "value": "[parameters('Neo4jBoltPort')]" },

                    "Neo4jClusterPort": { "value": "[parameters('Neo4jClusterPort')]" },
                    "Neo4jTransactionPort": { "value": "[parameters('Neo4jTransactionPort')]" },
                    "Neo4jRaftPort": { "value": "[parameters('Neo4jRaftPort')]" },
                    "Neo4jTags": { "value": "[parameters('Neo4jTags')]" },

                    "ClusterName": { "value": "[parameters('ClusterName')]" },
                    "VmSize": { "value": "[parameters('VmSize')]" },

                    "ArtifactsBase": { "value": "[parameters('ArtifactsBase')]" }
                }
            }
         }

         {#
        {% with
             count_parameter='CoreNodes',
             dbms_mode="CORE" %}
           {% include 'arm/template-parts/neo4j-node.jinja' %},
        {% endwith %}

        {% with
             count_parameter='ReadReplicas',
             dbms_mode='READ_REPLICA' %}
           {% include 'arm/template-parts/neo4j-node.jinja' %}
        {% endwith %}
        #}
    ]
}
