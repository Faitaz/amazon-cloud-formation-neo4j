{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },

        "ClusterNamePrefix": {
            "type": "string",
            "minLength": 1,
            "maxLength": 11
        },

        "VmCount": {
            "type": "int",
            "minValue": 3,
            "defaultValue": 3
        },

        "VmSize": {
            "type": "string"
        },

        "AdminUserName": {
            "type": "securestring"
        },

        "AdminAuthType": {
            "type": "string",
            "allowedValues": ["sshpublickey", "password"]
        },

        "AdminCredential": {
            "type": "securestring",
            "defaultValue": null
        },

        "VNetNewOrExisting": {
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ]
        },

        "VNetName": {
            "type": "string"
        },

        "VNetAddressPrefix": {
            "type": "string"
        },

        "VNetResourceGroupName": {
            "type": "string"
        },

        "SubnetName": {
            "type": "string"
        },

        "SubnetAddressPrefix": {
            "type": "string"
        },

        "SubnetStartAddress": {
            "type": "string"
        },

        "PublicIPNewOrExistingOrNone": {
            "type": "string",
            "allowedValues": ["new","existing","none"]
        },

        "PublicIPAllocationMethod": {
            "type": "string",
            "allowedValues": ["Static", "Dynamic"]
        },

        "sslCert": {
            "type": "string"
        },

        "sslKey": {
            "type": "string"
        },

        "Neo4jVersion": {
            "type": "string"
        },

        "Neo4jPassword": {
            "type": "securestring"
        },

        "Neo4jHttpsPort": {
            "type": "int"
        },

        "Neo4jHttpPort": {
            "type": "int"
        },

        "Neo4jBoltPort": {
            "type": "int"
        },
        
        "Neo4jClusterPort": {
            "type": "int",
            "defaultValue": 5000,
            "metadata": {
                "description": "The port used for communication between instances in the cluster"
            }
        },

        "Neo4jTransactionPort": {
            "type": "int",
            "defaultValue": 6000,
            "metadata": {
                "description": "The port used to read transaction data from the master"
            }
        },

        "Neo4jRaftPort": {
            "type": "int",
            "defaultValue": 7000,
            "metadata": {
                "description": "The port used to read transaction data from the master"
            }
        },

        "Neo4JTags": {
            "type": "object",
            "metadata": {
                "description": "Dictionary of tags to apply to the various resources"
            }
        },

        "ArtifactsBase": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": "",
                "description": "base URL at which Marketplace package files are stored. Value adjusted automatically during Marketplace submission process."
            },
            "defaultValue": "https://s3.amazonaws.com/neo4j-arm/test"
        }
    },
    "variables": {
        "artifactsBase": "[concat(parameters('ArtifactsBase'),'/')]",
        "namePrefixes": {
            "nic": "[concat(parameters('ClusterNamePrefix'),'-nic-')]",
            "nsg": "[concat(parameters('ClusterNamePrefix'),'-sg')]",
            "storage": "[concat(toLower(trim(parameters('ClusterNamePrefix'))), uniqueString(resourceGroup().id))]",
            "vm": "[concat(parameters('ClusterNamePrefix'),'-vm-')]",
            "publicIP": "[concat(parameters('ClusterNamePrefix'),'-public-ip')]",
            "loadBalancer": "[concat(parameters('ClusterNamePrefix'),'-lb')]",
            "availabilitySet": "[concat(parameters('ClusterNamePrefix'), '-as')]"
        },
        "LbResourceID": "[resourceId('Microsoft.Network/loadBalancers',variables('namePrefixes').loadBalancer)]",
        "resourceIDs": {
            "loadbalancer": "[variables('LbResourceID')]",
            "loadbalancerBEP": "[concat(variables('LbResourceID'), '/backendAddressPools/Neo4jInstancePool')]",
            "loadbalancerFE": "[concat(variables('LbResourceID'), '/frontendIPConfigurations/LoadBalancerFrontEnd')]",
            "availabilitySet": "[resourceId('Microsoft.Compute/availabilitySets', variables('namePrefixes').availabilitySet)]",
            "publicIP": "[resourceId('Microsoft.Network/publicIPAddresses', variables('namePrefixes').publicIP)]",
            "virtualNetwork": "[resourceId(parameters('VNetResourceGroupName'), 'Microsoft.Network/virtualNetworks', parameters('VNetName'))]"
        },
        "natRulePrefix": "SSH-",
        "imageReferenceTest": {
            "id": "/subscriptions/e4486a99-00d6-4e46-aab0-b087f918eda9/resourceGroups/neo4j-public/providers/Microsoft.Compute/images/neo4j-enterprise-1-3.4.5-apoc_2018-08-02T04_16_20Z"
        },
        "imageReference": "[variables('imageReferenceTest')]",
        "authConfig-sshpublickey": {
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[concat('/home/', parameters('AdminUserName'),'/.ssh/authorized_keys')]",
                            "keyData": "[parameters('AdminCredential')]"
                        }
                    ]
                }
            },
            "adminPassword": ""
        },
        "authConfig-password": {
            "linuxConfiguration": {
                "disablePasswordAuthentication": false
            },
            "adminPassword": "[parameters('AdminCredential')]"
        },
        "authConfig": "[variables(concat('authConfig-',parameters('AdminAuthType')))]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('namePrefixes').availabilitySet]",
            "apiVersion": "2016-08-30",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Neo4JTags')]",
            "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": 3
            },
            "sku": {
                "name": "Aligned"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IPListConstructor",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'generateIPList.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "subnetCIDR": {
                        "value": "[parameters('SubnetAddressPrefix')]"
                    },
                    "addressCount": {
                        "value": "[parameters('VmCount')]"
                    },
                    "ArtifactsBase": {
                        "value": "[parameters('ArtifactsBase')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('namePrefixes').publicIP, padLeft(copyIndex(),3,'0'))]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "location": "[parameters('Location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('PublicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[concat('node', padLeft(copyIndex(),3,'0'))]"
                }                
            },
            "copy": {
                "name": "ipCI",
                "count": "[parameters('VmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('namePrefixes').nic, padLeft(copyIndex(),3,'0'))]",
            "apiVersion": "2016-12-01",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Neo4JTags')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[concat(variables('resourceIDs').virtualNetwork, '/subnets/', parameters('SubnetName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[concat(variables('resourceIDs').publicIP, padLeft(copyIndex(),3,'0'))]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "internalDnsNameLabel": "[concat('node', padLeft(copyIndex(),3,'0'))]"
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('namePrefixes').nsg)]"
                }
            },
            "copy": {
                "name": "nicCI",
                "count": "[parameters('VmCount')]"
            },
            "dependsOn": [
                "[concat(variables('resourceIDs').publicIP, padLeft(copyIndex(),3,'0'))]",
                "VirtualNetwork",
                "IPListConstructor",
                "[variables('namePrefixes').nsg]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('namePrefixes').nsg]",
            "apiVersion": "2016-12-01",
            "location": "[parameters('Location')]",
            "tags": "[parameters('Neo4JTags')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http-probe",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jHttpPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-https",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jHttpsPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-bolt",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jBoltPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-cluster-communication",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jClusterPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-transaction-communication",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jTransactionPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1050,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-raft-communication",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "[string(parameters('Neo4jRaftPort'))]",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1060,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "NATListConstructor",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'generateNatRules.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "ruleNamePrefix": {
                        "value": "[variables('natRulePrefix')]"
                    },
                    "ruleCount": {
                        "value": "[parameters('VmCount')]"
                    },
                    "frontendPortBase": {
                        "value": 22000
                    },
                    "backendPort": {
                        "value": 22
                    },
                    "protocol": {
                        "value": "Tcp"
                    },
                    "enableFloatingIP": {
                        "value": false
                    },
                    "frontendIPConfigurationID": {
                        "value": "[variables('resourceIDs').loadbalancerFE]"
                    },
                    "ArtifactsBase": {
                        "value": "[parameters('ArtifactsBase')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "VirtualNetwork",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'vnet-new.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "NetworkName": {
                        "value": "[parameters('VNetName')]"
                    },
                    "NetworkAddressPrefix": {
                        "value": "[parameters('VNetAddressPrefix')]"
                    },
                    "SubnetName": {
                        "value": "[parameters('SubnetName')]"
                    },
                    "SubnetAddressPrefix": {
                        "value": "[parameters('SubnetAddressPrefix')]"
                    },
                    "Location": {
                        "value": "[parameters('Location')]"
                    },
                    "Neo4JTags": {
                        "value": "[parameters('Neo4JTags')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('namePrefixes').vm, padLeft(copyIndex(),3,'0'))]",
            "apiVersion": "2018-04-01",
            "location": "[parameters('Location')]",
            "tags": {
                "provider": "B9442746-5BFF-4E2F-BC90-1F49C5791FAA",
                "neo4jURL": "https://neo4j.com/",
                "licensing": "https://neo4j.com/licensing",
                "dbms_mode": "CORE",
                "neo4j_mode": "cluster",
                "dbms_connector_https_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jHttpsPort')))]",
                "dbms_connector_http_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jHttpPort')))]",
                "dbms_connector_bolt_listen_address": "[concat('0.0.0.0:', string(parameters('Neo4jBoltPort')))]",
                "causal_clustering_minimum_core_cluster_size_at_formation": "3",
                "causal_clustering_initial_discovery_members": "node000:5000,node001:5000,node002:5000",
                "causal_clustering_discovery_type": "LIST",
                "dbms_connector_bolt_tls_level": "OPTIONAL"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[variables('resourceIDs').availabilitySet]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('VmSize')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'),'-OS')]",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'),'-Data-0')]",
                            "createOption": "Empty",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "caching": "None",
                            "diskSizeGB": "1023"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[concat(variables('namePrefixes').vm,padLeft(copyIndex(),3,'0'))]",
                    "adminUsername": "[parameters('AdminUserName')]",
                    "linuxConfiguration": "[variables('authConfig').linuxConfiguration]",
                    "secrets": [],
                    "adminPassword": "[variables('authConfig').adminPassword]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefixes').nic,padLeft(copyIndex(),3,'0')))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmCI",
                "count": "[parameters('VmCount')]"
            },
            "dependsOn": [
                "[variables('resourceIDs').availabilitySet]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('namePrefixes').nic,padLeft(copyIndex(),3,'0')))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "[concat('ConfigureVM-', variables('namePrefixes').vm, padLeft(copyIndex(),3,'0'))]",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('namePrefixes').vm, padLeft(copyIndex(),3,'0'))]"
            ],
            "copy": {
                "name": "vmExtLoop",
                "count": "[parameters('VmCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('artifactsBase'), 'scriptTemplate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "VmName": {
                        "value": "[concat(variables('namePrefixes').vm, padLeft(copyIndex(),3,'0'))]"
                    },
                    "Location": {
                        "value": "[parameters('Location')]"
                    },
                    "ArtifactsBase": {
                        "value": "[parameters('ArtifactsBase')]"
                    },
                    "Neo4JTags": {
                        "value": "[parameters('Neo4JTags')]"
                    },
                    "Version": {
                        "value": "[parameters('Neo4jVersion')]"
                    },
                    "Password": {
                        "value": "[parameters('Neo4jPassword')]"
                    },
                    "sslCert": {
                        "value": "[parameters('sslCert')]"
                    },
                    "sslKey": {
                        "value": "[parameters('sslKey')]"
                    },
                    "httpPort": {
                        "value": "[string(parameters('Neo4jHttpPort'))]"
                    },
                    "httpsPort": {
                        "value": "[string(parameters('Neo4jHttpsPort'))]"
                    },
                    "boltPort": {
                        "value": "[string(parameters('Neo4jBoltPort'))]"
                    },
                    "CoordPort": {
                        "value": "[string(parameters('Neo4jClusterPort'))]"
                    },
                    "DataPort": {
                        "value": "[string(parameters('Neo4jTransactionPort'))]"
                    },
                    "myId": {
                        "value": "[string(copyIndex(1))]"
                    },
                    "myIp": {
                        "value": "[reference('IPListConstructor').outputs.IPList.value[copyIndex()]]"
                    },
                    "allIps": {
                        "value": "[trim(replace(replace(replace(string(reference('IPListConstructor').outputs.IPList.value),'\"',''), '[', ''),']',''))]"
                    }
                }
            }
        }
    ]
}
